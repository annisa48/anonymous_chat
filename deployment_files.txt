# Procfile (for Heroku)
web: node bot.js

---
# railway.json (for Railway)
{
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "startCommand": "node bot.js"
  }
}

---
# ecosystem.config.js (for PM2)
module.exports = {
  apps: [{
    name: 'anonymous-chat-bot',
    script: 'bot.js',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production'
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true
  }]
};

---
# docker-compose.yml (for Docker)
version: '3.8'

services:
  anonymous-bot:
    build: .
    container_name: anonymous-chat-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - BOT_TOKEN=${BOT_TOKEN}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - bot-network

networks:
  bot-network:
    driver: bridge

---
# Dockerfile
FROM node:18-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Create directories
RUN mkdir -p data logs

# Expose port (if needed for webhooks)
EXPOSE 3000

# Start the bot
CMD ["node", "bot.js"]

---
# .env.example
BOT_TOKEN=your_bot_token_here
ADMIN_IDS=123456789,987654321
NODE_ENV=production
DEBUG=false
WEBHOOK_URL=https://your-domain.com/webhook
PORT=3000

---
# .gitignore
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Bot data
bot_data.json
data/
logs/

# Environment variables
.env
.env.local
.env.production
.env.development

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

---
# start.sh (Startup script)
#!/bin/bash

echo "ðŸš€ Starting Anonymous Chat Bot..."

# Create necessary directories
mkdir -p logs data